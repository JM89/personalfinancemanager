@page "/banks/create"
@page "/banks/edit/{id:int}"
@using PFM.Website.Services
@using PFM.Website.Models
@inject BankService BankService
@inject CountryService CountryService
@inject NavigationManager NavigationManager


<PageTitle>PFM - Banks</PageTitle>

@if (Id != null)
{
    <h3>Edit Bank</h3>
    <hr />
}
else
{
    <h3>Create Bank</h3>
    <hr />
}

<div class="row">
    <div class="card">
        <div class="card-body">
            <p class="card-text">
                <div class="col-lg-6">
                    <EditForm Model="m" OnSubmit="HandleSubmit">
                        <DataAnnotationsValidator />
                        <div class="col-sm-8 text-danger">
                            <ValidationSummary />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="name" class="col-sm-3 col-form-label">Country</label>
                            <div class="col-sm-9">
                                <select class="form-control" @bind="@m.CountryId">
                                    <option value=""></option>
                                    @foreach (var country in @AvailableCountries)
                                    {
                                        <option value="@country.Id">@country.Name</option>
                                    }
                                </select>
                            </div>
                            <br />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="name" class="col-sm-3 col-form-label">Name</label>
                            <div class="col-sm-9">
                                <InputText id="name" @bind-Value="m.Name" class="form-control"></InputText>
                            </div>
                            <br />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="website" class="col-sm-3 col-form-label">Website</label>
                            <div class="col-sm-9">
                                <InputText id="website" @bind-Value="m.Website" class="form-control"></InputText>
                            </div>
                            <br />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="phoneNumber" class="col-sm-3 col-form-label">Phone Number</label>
                            <div class="col-sm-9">
                                <InputText id="phoneNumber" @bind-Value="m.GeneralEnquiryPhoneNumber" class="form-control"></InputText>
                            </div>
                            <br />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="bank-icon" class="col-sm-3 col-form-label">Bank Icon</label>
                            <div class="col-sm-9">
                                <InputFile OnChange="@LoadBankIcon"></InputFile>
                                <br /><br />
                                <div class="form-group" id="IconPathPreviewDiv">
                                    <div class="col-md-2"></div>
                                    <div class="col-md-10">
                                        <table>
                                            @if (m.RenderedIcon != null)
                                            {
                                                <tr>
                                                    <td>
                                                        <img id="IconPathPreview50" src="@m.RenderedIcon" width="50" height="50" />
                                                    </td>
                                                    <td>
                                                        <img id="IconPathPreview18" src="@m.RenderedIcon" width="18" height="18" />
                                                    </td>
                                                </tr>
                                            }
                                        </table>
                                    </div>
                                </div>
                            </div>
                            <br />
                        </div>
                        <br />
                        <br />
                        <br />
                        <br />
                        <div style="text-align:right;">
                            <button type="button" class="btn btn-secondary" @onclick="Back">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </EditForm>
                </div>
            </p>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public int? Id { get; set; }

    private BankEditModel m = new BankEditModel() { GeneralEnquiryPhoneNumber = "00000000000", CountryId = 1, Website = "https://website.com" };
    private IList<CountryModel> AvailableCountries = new List<CountryModel>();
    private IBrowserFile BankIcon;

    protected override async Task OnInitializedAsync()
    {
        AvailableCountries = await CountryService.GetAll();

        if (!Id.HasValue)
            return;

        var model = await BankService.GetById(Id.Value);

        if (model == null)
            return;

        m = model;
    }

    void Back()
    {
        NavigationManager.NavigateTo("/banks");
    }

    async Task HandleSubmit()
    {
        bool result = false;
        if (!Id.HasValue)
        {
            result = await BankService.Create(m, BankIcon);
        }
        else
        {
            result = await BankService.Edit(Id.Value, m, BankIcon);
        }
        if (result)
        {
            NavigationManager.NavigateTo("/banks");
        }
    }

    private async Task LoadBankIcon(InputFileChangeEventArgs e)
    {
        var image = await e.File.RequestImageFileAsync("image/png", 600, 600);

        using Stream imageStream = image.OpenReadStream(1024 * 1024 * 10);

        using MemoryStream ms = new();
        //copy imageStream to Memory stream
        await imageStream.CopyToAsync(ms);

        BankIcon = image;

        //convert stream to base64
        m.RenderedIcon = $"data:image/png;base64,{Convert.ToBase64String(ms.ToArray())}";
        StateHasChanged();
    }
}

