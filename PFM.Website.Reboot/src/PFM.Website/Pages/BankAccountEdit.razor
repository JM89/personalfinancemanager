@page "/bank-accounts/create"
@using PFM.Website.Services
@using PFM.Website.Models
@inject BankAccountService BankAccountService
@inject BankService BankService
@inject CurrencyService CurrencyService
@inject NavigationManager NavigationManager


<PageTitle>PFM - Bank Accounts</PageTitle>

<h3>Create Bank Account</h3>
<hr />

<br />
<EditForm Model="m" OnSubmit="HandleSubmit">
    <DataAnnotationsValidator />
    <div class="col-sm-8 text-danger">
        <ValidationSummary />
    </div>
    <div class="form-group row" style="height:50px">
        <label for="name" class="col-sm-2 col-form-label">Name</label>
        <div class="col-sm-10">
            <InputText id="name" @bind-Value="m.Name" class="form-control"></InputText>
        </div>
        <br />
    </div>
    <div class="form-group row" style="height:50px">
        <label for="name" class="col-sm-2 col-form-label">Bank</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="@m.BankId">
                <option value=""></option>
                @foreach (var bank in @AvailableBanks)
                {
                    <option value="@bank.Id">@bank.Name</option>
                }
            </select>
        </div>
        <br />
    </div>
    <div class="form-group row" style="height:50px">
        <label for="name" class="col-sm-2 col-form-label">Country</label>
        <div class="col-sm-10">
            <select class="form-control" @bind="@m.CurrencyId">
                <option value=""></option>
                @foreach (var currency in @AvailableCurrencies)
                {
                    <option value="@currency.Id">@currency.Name</option>
                }
            </select>
        </div>
        <br />
    </div>
    <div class="form-group row" style="height:50px">
        <label for="savingAccount" class="col-sm-2 col-form-label">Saving account</label>
        <div class="col-sm-10">
            <InputCheckbox id="savingAccount" @bind-Value="m.IsSavingAccount"></InputCheckbox>
        </div>
        <br />
    </div>
    <br />
    <br />
    <button type="button" class="btn btn-secondary" @onclick="Back">Cancel</button>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {

    [Parameter]
    public int? Id { get; set; }

    private BankAccountEditModel m = new BankAccountEditModel() { BankId = 1, CurrencyId = 1 };
    private IList<CurrencyModel> AvailableCurrencies = new List<CurrencyModel>();
    private IList<BankListModel> AvailableBanks = new List<BankListModel>();

    protected override async Task OnInitializedAsync()
    {
        AvailableCurrencies = await CurrencyService.GetAll();
        AvailableBanks = await BankService.GetAll();
    }

    void Back()
    {
        NavigationManager.NavigateTo("/bank-accounts");
    }

    async Task HandleSubmit()
    {
        bool result = await BankAccountService.Create(m);
        if (result)
        {
            NavigationManager.NavigateTo("/bank-accounts");
        }
    }
}

