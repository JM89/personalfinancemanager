@page "/expense-types/create"
@page "/expense-types/edit/{id:int}"
@using PFM.Website.Services
@using PFM.Website.Models
@inject ExpenseTypeService ExpenseTypeService
@inject NavigationManager NavigationManager
@using BlazorColorPicker


<PageTitle>PFM - Expense Types</PageTitle>

@if (Id != null)
{
    <h3>Edit Expense Type</h3>
    <hr />
}
else
{
    <h3>Create Expense Type</h3>
    <hr />
}

<div class="row">
    <div class="card">
        <div class="card-body">
            <p class="card-text">
                <div class="col-lg-6">
                    <EditForm Model="_expenseType" OnSubmit="HandleSubmit">
                        <DataAnnotationsValidator />
                        <div class="col-sm-8 text-danger">
                            <ValidationSummary />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="name" class="col-sm-3 col-form-label">Name</label>
                            <div class="col-sm-9">
                                <InputText id="name" @bind-Value="_expenseType.Name" class="form-control"></InputText>
                            </div>
                            <br />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="color" class="col-sm-3 col-form-label">Graph Color</label>
                            <div class="col-sm-9">
                                <button type="button" class="btn btn-light btn-sm" @onclick="OpenGraphColorModal">
                                    <div style="width:80px; background-color:#@_expenseType.GraphColor" class="buttonColor"></div>
                                </button>
                                <ColorPicker IsOpened="_isGraphColorModalOpened" Closed="ClosedGraphColorModal" MyColor="@_expenseType.GraphColor">
                                </ColorPicker>
                            </div>
                            <br />
                        </div>
                        <div class="form-group row" style="height:50px">
                            <label for="showOnDashboard" class="col-sm-3 col-form-label">Show On Dashboard</label>
                            <div class="col-sm-9">
                                <InputCheckbox id="showOnDashboard" @bind-Value="_expenseType.ShowOnDashboard"></InputCheckbox>
                            </div>
                            <br />
                        </div>
                        <br />
                        <br />
                        <div style="text-align:right;">
                            <button type="button" class="btn btn-secondary" @onclick="Back">Cancel</button>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </EditForm>
                </div>
            </p>
        </div>
    </div>
</div>


@code {

    [Parameter]
    public int? Id { get; set; }

    private ExpenseTypeModel _expenseType = new () { GraphColor = "E5F0F4" };

    protected override async Task OnInitializedAsync()
    {
        if (!Id.HasValue)
            return;
        
        _expenseType = await ExpenseTypeService.GetById(Id.Value);
    }

    void Back()
    {
        NavigationManager.NavigateTo("/expense-types");
    }

    async Task HandleSubmit()
    {
        bool result = false;
        if (!Id.HasValue)
        {
            result = await ExpenseTypeService.Create(_expenseType);
        }
        else
        {
            result = await ExpenseTypeService.Edit(Id.Value, _expenseType);
        }
        if (result)
        {
            NavigationManager.NavigateTo("/expense-types");
        }
    }

    bool _isGraphColorModalOpened = false;

    void OpenGraphColorModal()
    {
        _isGraphColorModalOpened = true;
    }

    void ClosedGraphColorModal(string value)
    {
        _expenseType.GraphColor = value.Replace("#", "");
        _isGraphColorModalOpened = false;
    }
}

