<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountCreate" xml:space="preserve">
    <value>Create an account</value>
  </data>
  <data name="AccountDelete" xml:space="preserve">
    <value>Delete an account</value>
  </data>
  <data name="AccountEdit" xml:space="preserve">
    <value>Edit an account</value>
  </data>
  <data name="AccountList" xml:space="preserve">
    <value>List of accounts</value>
  </data>
  <data name="AccountPages" xml:space="preserve">
    <value>Manage accounts</value>
  </data>
  <data name="AtmWithdrawCreate" xml:space="preserve">
    <value>Create an ATM withdraw</value>
  </data>
  <data name="AtmWithdrawDelete" xml:space="preserve">
    <value>Delete an ATM withdraw</value>
  </data>
  <data name="AtmWithdrawEdit" xml:space="preserve">
    <value>Edit an ATM withdraw</value>
  </data>
  <data name="AtmWithdrawList" xml:space="preserve">
    <value>List of ATM withdraws</value>
  </data>
  <data name="AtmWithdrawPages" xml:space="preserve">
    <value>Manage ATM withdraws</value>
  </data>
  <data name="BankCreate" xml:space="preserve">
    <value>Create a bank</value>
  </data>
  <data name="BankDelete" xml:space="preserve">
    <value>Delete a bank</value>
  </data>
  <data name="BankEdit" xml:space="preserve">
    <value>Edit a bank</value>
  </data>
  <data name="BankList" xml:space="preserve">
    <value>List of banks</value>
  </data>
  <data name="BankPages" xml:space="preserve">
    <value>Manage banks</value>
  </data>
  <data name="BudgetPlanCreate" xml:space="preserve">
    <value>Create a budget plan</value>
  </data>
  <data name="BudgetPlanDashboardPages" xml:space="preserve">
    <value>Budget Planned Dashboard</value>
  </data>
  <data name="BudgetPlanDelete" xml:space="preserve">
    <value>Delete a budget plan</value>
  </data>
  <data name="BudgetPlanEdit" xml:space="preserve">
    <value>Edit a budget plan</value>
  </data>
  <data name="BudgetPlanList" xml:space="preserve">
    <value>List of budget plans</value>
  </data>
  <data name="BudgetPlanPages" xml:space="preserve">
    <value>Manage budget plans</value>
  </data>
  <data name="BudgetPlanView" xml:space="preserve">
    <value>View a budget plan</value>
  </data>
  <data name="CountryCreate" xml:space="preserve">
    <value>Create a country</value>
  </data>
  <data name="CountryDelete" xml:space="preserve">
    <value>Delete a country</value>
  </data>
  <data name="CountryEdit" xml:space="preserve">
    <value>Edit a country</value>
  </data>
  <data name="CountryList" xml:space="preserve">
    <value>List of countries</value>
  </data>
  <data name="CountryPages" xml:space="preserve">
    <value>Manage countries</value>
  </data>
  <data name="CurrencyCreate" xml:space="preserve">
    <value>Create a currency</value>
  </data>
  <data name="CurrencyDelete" xml:space="preserve">
    <value>Delete a currency</value>
  </data>
  <data name="CurrencyEdit" xml:space="preserve">
    <value>Edit a currency</value>
  </data>
  <data name="CurrencyList" xml:space="preserve">
    <value>List of currencies</value>
  </data>
  <data name="CurrencyPages" xml:space="preserve">
    <value>Manage currencies</value>
  </data>
  <data name="ExpenditureCreate" xml:space="preserve">
    <value>Create an expense</value>
  </data>
  <data name="ExpenditureDelete" xml:space="preserve">
    <value>Delete an expense</value>
  </data>
  <data name="ExpenditureEdit" xml:space="preserve">
    <value>Edit an expense</value>
  </data>
  <data name="ExpenditureList" xml:space="preserve">
    <value>List of expenses</value>
  </data>
  <data name="ExpenditurePages" xml:space="preserve">
    <value>Manage expenses</value>
  </data>
  <data name="ExpenditureSplitDashboardPages" xml:space="preserve">
    <value>Expenditure Split Dashboard</value>
  </data>
  <data name="ExpenditureTypeCreate" xml:space="preserve">
    <value>Create an expenditure type</value>
  </data>
  <data name="ExpenditureTypeDelete" xml:space="preserve">
    <value>Delete an expenditure type</value>
  </data>
  <data name="ExpenditureTypeEdit" xml:space="preserve">
    <value>Edit an expenditure type</value>
  </data>
  <data name="ExpenditureTypeList" xml:space="preserve">
    <value>List of expenditure types</value>
  </data>
  <data name="ExpenditureTypePages" xml:space="preserve">
    <value>Manage expenditure types</value>
  </data>
  <data name="IncomeCreate" xml:space="preserve">
    <value>Create an income</value>
  </data>
  <data name="IncomeDelete" xml:space="preserve">
    <value>Delete an income</value>
  </data>
  <data name="IncomeEdit" xml:space="preserve">
    <value>Edit an income</value>
  </data>
  <data name="IncomeList" xml:space="preserve">
    <value>List of incomes</value>
  </data>
  <data name="IncomePages" xml:space="preserve">
    <value>Manage incomes</value>
  </data>
  <data name="LoginPages" xml:space="preserve">
    <value>Log in</value>
  </data>
  <data name="PaymentMethodCreate" xml:space="preserve">
    <value>Create a payment method</value>
  </data>
  <data name="PaymentMethodDelete" xml:space="preserve">
    <value>Delete a payment method</value>
  </data>
  <data name="PaymentMethodEdit" xml:space="preserve">
    <value>Edit a payment method</value>
  </data>
  <data name="PaymentMethodList" xml:space="preserve">
    <value>List of payment methods</value>
  </data>
  <data name="PaymentMethodPages" xml:space="preserve">
    <value>Manage payment methods</value>
  </data>
  <data name="PensionCreate" xml:space="preserve">
    <value>Create a pension</value>
  </data>
  <data name="PensionDelete" xml:space="preserve">
    <value>Delete a pension</value>
  </data>
  <data name="PensionEdit" xml:space="preserve">
    <value>Edit a pension</value>
  </data>
  <data name="PensionList" xml:space="preserve">
    <value>List of pensions</value>
  </data>
  <data name="PensionPages" xml:space="preserve">
    <value>Manage pensions</value>
  </data>
  <data name="PeriodicOutcomeCreate" xml:space="preserve">
    <value>Create an outcome</value>
  </data>
  <data name="PeriodicOutcomeDelete" xml:space="preserve">
    <value>Delete an outcome</value>
  </data>
  <data name="PeriodicOutcomeEdit" xml:space="preserve">
    <value>Edit an outcome</value>
  </data>
  <data name="PeriodicOutcomeList" xml:space="preserve">
    <value>List of outcomes</value>
  </data>
  <data name="PeriodicOutcomePages" xml:space="preserve">
    <value>Manage outcomes</value>
  </data>
  <data name="SalaryCreate" xml:space="preserve">
    <value>Create a salary</value>
  </data>
  <data name="SalaryDelete" xml:space="preserve">
    <value>Delete a salary</value>
  </data>
  <data name="SalaryEdit" xml:space="preserve">
    <value>Edit a salary</value>
  </data>
  <data name="SalaryList" xml:space="preserve">
    <value>List of salaries</value>
  </data>
  <data name="SalaryPages" xml:space="preserve">
    <value>Manage salaries</value>
  </data>
  <data name="SavingCreate" xml:space="preserve">
    <value>Create a saving</value>
  </data>
  <data name="SavingDelete" xml:space="preserve">
    <value>Delete a saving</value>
  </data>
  <data name="SavingEdit" xml:space="preserve">
    <value>Edit a saving</value>
  </data>
  <data name="SavingList" xml:space="preserve">
    <value>List of saving</value>
  </data>
  <data name="SavingPages" xml:space="preserve">
    <value>Manage savings</value>
  </data>
  <data name="TaxCreate" xml:space="preserve">
    <value>Create a tax</value>
  </data>
  <data name="TaxDelete" xml:space="preserve">
    <value>Delete a tax</value>
  </data>
  <data name="TaxEdit" xml:space="preserve">
    <value>Edit a tax</value>
  </data>
  <data name="TaxList" xml:space="preserve">
    <value>List of taxes</value>
  </data>
  <data name="TaxPages" xml:space="preserve">
    <value>Manage taxes</value>
  </data>
  <data name="TaxTypeList" xml:space="preserve">
    <value>List of tax types</value>
  </data>
  <data name="TaxTypePages" xml:space="preserve">
    <value>Manage tax types</value>
  </data>
  <data name="UserProfileCreate" xml:space="preserve">
    <value>Create user profile</value>
  </data>
  <data name="UserProfileEdit" xml:space="preserve">
    <value>Edit user profile</value>
  </data>
  <data name="UserProfilePages" xml:space="preserve">
    <value>Manage user profile</value>
  </data>
  <data name="UserProfileView" xml:space="preserve">
    <value>View user profile</value>
  </data>
</root>