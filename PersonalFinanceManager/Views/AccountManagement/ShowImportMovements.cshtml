@model PersonalFinanceManager.Models.AccountManagement.ImportMovementModel

@{
    Layout = "~/Views/Shared/_LayoutEditor.cshtml";
    ViewBag.PageTitle = Resources.TitleNames.MovementImport;
    ViewBag.FormTitle = Resources.TitleNames.MovementImportUploadCsv;
}

@section BreadCrumbSection
{
    <li>
        <a href="/AccountManagement/Index">Account Management</a>
    </li>
    <li class="active">
        <strong>@ViewBag.FormTitle</strong>
    </li>
}

@section EditorSection
{
    @using (Html.BeginForm("ImportMovements", "AccountManagement", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.AccountId)

        <div class="form-horizontal">
            
            <div class="form-group">
                <div class="col-md-12">
                    
                    <ul class="nav nav-tabs">
                        <li class="active">
                            <a id="raw_link">Raw</a>
                        </li>
                        <li>
                            <a id="formatted_link">Formatted</a>
                        </li>
                        <li>
                            <a id="summary_link">Summary</a>
                        </li>
                    </ul>
                    
                    <div class="tab-content clearfix">
                        <div class="tab-pane active" id="raw">
                            <br /><br />
                            <div class="form-group">
                                <label class="control-label col-md-2" for="csv">Upload CSV</label>
                                <div class="col-md-10">
                                    <input type="file" id="csv" name="csv" style="padding-top: 7px;" />
                                </div>
                            </div>
                            @*<div class="form-group">
                                <label class="control-label col-md-2" for="csv">Existing mapping</label>
                                <div class="col-md-10">
                                    <select class="form-control">
                                        <option>Mapping 1</option>
                                    </select>
                                </div>
                            </div>*@
                            <div class="form-group">
                                <label class="control-label col-md-2">Delimiters</label>
                                <div class="col-md-10">
                                    <input type="text" value="," class="form-control" disabled="disabled" />
                                </div>
                            </div>

                            <div class="form-group">
                                <label class="control-label col-md-2">Date Format</label>
                                <div class="col-md-10">
                                    <input type="text" value="DD/MM/YYYY" class="form-control" disabled="disabled" />
                                </div>
                            </div>

                            <div id="CsvContent">

                            </div>
                            <div class="form-group">
                                <div class="col-md-12" style="text-align: right">
                                    <a class="btn btn-primary" id="Raw_Next" disabled="disabled">Next</a>
                                    @*@Html.ActionLink("Save Mapping", "Index", null, htmlAttributes: new {@class = "btn btn-info"})*@
                                    @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new {@class = "btn btn-default"})
                                </div>
                            </div>
                            <select id="PaymentMethods" name="PaymentMethods" style="display:none;">
                                <option value=""></option>
                                @foreach (var paymentMethod in @Model.PaymentMethods)
                                {
                                    <option value="@paymentMethod.Value">@paymentMethod.Text</option>
                                }
                            </select>
                            <select id="ImportTypes" name="ImportTypes" style="display:none;" onchange="SetNotApplicable()">
                                <option value=""></option>
                                @foreach (var importType in @Model.ImportTypes)
                                {
                                    <option value="@importType.Value">@importType.Text</option>
                                }
                            </select>
                        </div>
                        <div class="tab-pane" id="formatted">
                            <br /><br />
                            <div class="form-group">
                                <label class="control-label col-md-2" for="csv">Last Movement Registered</label>
                                <div class="col-md-10">
                                    <label class="control-label" style="font-weight: normal">@Model.DisplayedLastMovementRegistered</label>
                                </div>
                            </div>
                            <div id="FormattedContentTable">
                                <table class='table table-striped'>
                                    <thead>
                                    <tr>
                                        <th>Include</th>
                                        <th>Import Type</th>
                                        <th>Date</th>
                                        <th>Description</th>
                                        <th>Cost</th>
                                        <th>Payment Method</th>
                                        <th>Expense Type</th>
                                    </tr>
                                    </thead>
                                    <tbody id="FormattedContentBody">

                                    </tbody>
                                </table>
                            </div>
                            <div class="form-group">
                                <div class="col-md-12" style="text-align: right">
                                    @*<a class="btn btn-primary" id="Formatted_Previous">Previous</a>*@
                                    <a class="btn btn-primary" id="Formatted_Next">Next</a>
                                    @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new {@class = "btn btn-default"})
                                </div>
                            </div>
                        </div>
                        <div class="tab-pane" id="summary">
                            <h4>Summary</h4>
                            <table class='table' style="width: 30%;">
                                <tbody>
                                <tr>
                                    <td><strong>Current Balance</strong></td>
                                    <td style="text-align: right;">@Model.DisplayedAccountCurrentBalance</td>
                                </tr>
                                <tr>
                                    <td><strong>Expenses</strong></td>
                                    <td style="text-align: right;" id="summaryExpenses"></td>
                                </tr>
                                <tr>
                                    <td><strong>ATM Withdraws</strong></td>
                                    <td style="text-align: right;" id="summaryAtmWithdraws"></td>
                                </tr>
                                <tr>
                                    <td><strong>Incomes</strong></td>
                                    <td style="text-align: right;" id="summaryIncomes"></td>
                                </tr>
                                <tr>
                                    <td><strong>New Balance</strong></td>
                                    <td style="text-align: right;" id="summaryNewBalance"></td>
                                </tr>
                                </tbody>
                            </table>
                            
                            <hr />
                            <h4>Expenses</h4>
                            <table class='table table-striped'>
                                <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Cost</th>
                                    <th>Payment Method</th>
                                    <th>Expense Type</th>
                                </tr>
                                </thead>
                                <tbody id="FinalExpensesContentBody"></tbody>
                            </table>
                            <hr />
                            <h4>ATM Withdraws</h4>
                            <table class='table table-striped'>
                                <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Cost</th>
                                </tr>
                                </thead>
                                <tbody id="FinalAtmWithdrawsContentBody"></tbody>
                            </table>
                            <hr />
                            <h4>Incomes</h4>
                            <table class='table table-striped'>
                                <thead>
                                <tr>
                                    <th>Date</th>
                                    <th>Description</th>
                                    <th>Cost</th>
                                </tr>
                                </thead>
                                <tbody id="FinalIncomesContentBody"></tbody>
                            </table>
                            <div class="form-group">
                                <div class="col-md-12" style="text-align: right">
                                    @*@Html.ActionLink("Previous", "Index", null, htmlAttributes: new {@class = "btn btn-primary"})*@
                                    <input type="submit" value="Import" class="btn btn-info" />
                                    @Html.ActionLink("Cancel", "Index", null, htmlAttributes: new {@class = "btn btn-default"})
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
            
        </div>
    }
   
    
    <div id="MappingBox" class="modal fade" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Define Mapping for Payment Method</h4>
                </div>
                <div class="modal-body">
                    <form id="__AjaxAntiForgeryForm">
                        @Html.AntiForgeryToken()
                        <label id="validationErrors" style="color:red"></label>
                        <div class="form-horizontal">
                            <table class='table table-striped'>
                                <thead>
                                <tr>
                                    <th>Value</th>
                                    <th>Import Type</th>
                                    <th>Payment Method</th>
                                </tr>
                                </thead>
                                <tbody id="tbody_MappingPaymentMethod">
                                   
                                </tbody>
                            </table>
                        </div>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary btn_finish" id="btnFinish">Finish</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

}

@section ScriptsSection {

    <script type="text/javascript" src="~/Scripts/custom/ImportMovements/UploadCsvFile.js"></script>
    <script type="text/javascript" src="~/Scripts/custom/ImportMovements/TransformationRawToFormatted.js"></script>
    <script type="text/javascript" src="~/Scripts/custom/ImportMovements/TransformationFormattedToSummary.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {
            var model = @Html.Raw(Json.Encode(Model));

            $("#Formatted_Next").click(function() {
                var summary = ReturnSummary(model);
                PopulateSummary(summary, model);
                $("#summary_link").click();
            });

            $("#csv").change(function() {
                var delimiter = ",";
                UploadCsvFile(delimiter, model);
            });
        });

        var formatterPaymentMethods = [];

        function ClickRawNext(model)
        {
            $("#formatted_link").attr("href", "#formatted");
            $("#formatted_link").attr("data-toggle", "tab");
            $("#summary_link").attr("href", "#summary");
            $("#summary_link").attr("data-toggle", "tab");

            $("#Raw_Next").off('click');
            $("#Raw_Next").click(function () {
                var formattingParameters = [];
                formattingParameters.push("Date", { DateFormat: "DD/MM/YYYY" });

                var rows = ReturnFormattedRows(formattingParameters, model, formatterPaymentMethods);
                PopulateFormattedTable(rows, model);
                $("#formatted_link").click();
            });
        }

        function IgnoreColumn(col) {
            $("#CsvContentTable thead tr th:nth-child(" + col + ")").css("color", "lightgrey");
            $("#CsvContentTable thead tr th:nth-child(" + col + ")").addClass("disabled");
            $("#CsvContentTable tbody tr td:nth-child(" + col + ")").css("color", "lightgrey");
            $("#CsvContentTable thead tr th:nth-child(" + col + ") .importcontenttype").hide();
            $("#CsvContentTable thead tr th:nth-child(" + col + ") .mappingboxlink").hide();
            $("#linkIgnore_" + col).hide();
            $("#linkUndoIgnore_" + col).show();
            CheckIfAllPropertiesAreSelected();
        }

        function UndoIgnoreColumn(col) {
            $("#CsvContentTable thead tr th:nth-child(" + col + ")").css("color", "black");
            $("#CsvContentTable thead tr th:nth-child(" + col + ")").removeClass("disabled");
            $("#CsvContentTable tbody tr td:nth-child(" + col + ")").css("color", "black");
            $("#CsvContentTable thead tr th:nth-child(" + col + ") .importcontenttype").show();
            $("#CsvContentTable thead tr th:nth-child(" + col + ") .mappingboxlink").show();
            $("#linkIgnore_" + col).show();
            $("#linkUndoIgnore_" + col).hide();
            CheckIfAllPropertiesAreSelected();
        }

        function UpdateConfigMapping(col) {
            var hasConfig = $("#SelectProperty_" + col + " option:selected").attr('hasconfig');
            if (hasConfig === "true") {
                $("#linkConfigMapping_" + col).show();
                $("#ConfigNotDefined_" + col).show();
            } else {
                $("#linkConfigMapping_" + col).hide();
                $("#ConfigNotDefined_" + col).hide();
            }
            CheckIfAllPropertiesAreSelected();
        }

        function CheckIfAllPropertiesAreSelected() {
            var model = @Html.Raw(Json.Encode(Model));

            var displayedListCount = 0;
            var selectedPropertyNames = [];
            $.each($(".importcontenttype:visible option:selected"), function (i, sel) {
                displayedListCount++;
                if (jQuery.inArray($(sel).text(), selectedPropertyNames) == -1)
                {
                    selectedPropertyNames.push($(sel).text());
                }
            });

            var configIsDefined = $(".ConfigDefined:visible").length == 1;

            if ((displayedListCount == selectedPropertyNames.length) && (displayedListCount == model.MovementPropertyDefinitions.length) && configIsDefined)
            {
                $("#Raw_Next").removeAttr("disabled");
                ClickRawNext(model);
            }
            else
            {
                $("#Raw_Next").attr("disabled", "disabled");
            }
        }

        function OpenConfigMapping(col) {

            var selectedValues = [];
            var property = $("#SelectProperty_" + col + " option:selected").val();
            if (property === "Payment Method") {
                var values = [];
                $.each($("#CsvContentTable tbody tr td:nth-child(" + col + ")"), function(i, el) {
                    if (jQuery.inArray($(el).text(), selectedValues) == -1) {
                        selectedValues.push($(el).text());
                    }
                });
            } 

            var paymentMethodOptions = $("#PaymentMethods").html();
            var importTypesOptions = $("#ImportTypes").html();

            $("#linkConfigMapping_" + col).data('values', selectedValues)

            $('#MappingBox').modal('toggle');

            $('#MappingBox').on('shown.bs.modal', function (e) {
                $("#validationErrors").hide();
                var htmlContent = "";
                $.each($("#linkConfigMapping_" + col).data('values'), function (i, el) {
                    htmlContent += "<tr>";
                    htmlContent += "<td id='"+el+"'>" + el + "</td>";
                    htmlContent += "<td><select id='ImportTypes_" + i + "' class='form-control'>";
                    htmlContent += importTypesOptions;
                    htmlContent += "</select></td>";
                    htmlContent += "<td><select id='PaymentMethods_" + i + "' class='form-control'>";
                    htmlContent += paymentMethodOptions;
                    htmlContent += "</select></td>";
                    htmlContent += "</tr>";
                });
                $("#tbody_MappingPaymentMethod").html(htmlContent);
                $("#btnFinish").click(function () {
                    var results = [];
                    var validForm = true;

                    $.each($("#tbody_MappingPaymentMethod tr"), function (i, row) {
                        var columns = $(row).children();
                        var valueField = columns[0].id;
                        var importType = $(columns[1]).find("select").val();
                        var paymentMethod = $(columns[2]).find("select option:selected");
                        if (paymentMethod.val() == "" || importType == "")
                        {
                            validForm = false;
                        }
                        else
                        {
                            results.push({
                                Value: valueField,
                                PaymentMethodId: paymentMethod.val(),
                                PaymentMethod: paymentMethod.text(),
                                ImportType: importType
                            });
                        }
                    });
                    if (validForm) {
                        ConvertPaymentMethod(results, col);
                        $('#MappingBox').modal('toggle');
                    }
                    else {
                        $("#validationErrors").text("Invalid entries.");
                        $("#validationErrors").show();
                    }
                });
               
            })
        }

        function ConvertPaymentMethod(results, col) {
            formatterPaymentMethods = results;   
            $("#ConfigNotDefined_" + col).hide();
            $("#ConfigDefined_" + col).show();
            CheckIfAllPropertiesAreSelected();
        }

    </script>
}